apiVersion: v1
kind: ConfigMap
metadata:
  name: event-booking-config
  namespace: devopsproject
data:
  DB_NAME: OnlineEventBookingPlatform
  POSTGRES_HOST: "postgres-service"
  MONGO_HOST: "mongo-service"
  POSTGRES_PORT: "5432"
  MONGO_PORT: "27017"
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_QUEUE: notifications
  JWT_SECRET: ThisIsSecret
  PAYMENT_SERVICE_URL: "http://payment-service-service:5001"
  EVENT_SERVICE_URL: "http://event-service-service:5000"
  postgres-init-sql: |
    DO $$ BEGIN
        CREATE TYPE booking_status AS ENUM ('PENDING', 'CONFIRMED');
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$;

    CREATE TABLE IF NOT EXISTS users (
        userid SERIAL PRIMARY KEY,
        username VARCHAR(255) UNIQUE NOT NULL,
        password TEXT NOT NULL,
        usertype VARCHAR(50) CHECK (usertype IN ('customer', 'eventmanager')) NOT NULL
    );

    CREATE TABLE IF NOT EXISTS bookings (
        id SERIAL PRIMARY KEY,
        user_id INT NOT NULL,
        event_id INT NOT NULL,
        tickets INT NOT NULL CHECK (tickets > 0),
        total_amount INT NOT NULL CHECK (total_amount >= 0),
        status booking_status DEFAULT 'PENDING',
        FOREIGN KEY (user_id) REFERENCES users(userid) ON DELETE CASCADE
    );

    CREATE TABLE IF NOT EXISTS payments (
        id SERIAL PRIMARY KEY,
        user_id INT NOT NULL,
        account_id INT NOT NULL,
        booking_id INT NOT NULL,
        amount INT NOT NULL CHECK (amount >= 0),
        status VARCHAR(20) DEFAULT 'SUCCESS',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(userid) ON DELETE CASCADE,
        FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE
    );

  mongo-init-script: |
    db.createUser({
    user: "admin",
    pwd: "strongpassword",
    roles: [{ role: "dbOwner", db: "OnlineEventBookingPlatform" }]
    });

    db = db.getSiblingDB("OnlineEventBookingPlatform");

    db.createCollection("events");

    db.counters.insertOne({
      _id: "event_id",
      seq: 0
    });


