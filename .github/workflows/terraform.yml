name: 'Terraform & Deploy'

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.0.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:        ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR_instance_type:   "t2.micro"
          TF_VAR_desired_capacity: "2"
          TF_VAR_max_size:         "4"
          TF_VAR_min_size:         "1"
          TF_VAR_allowed_ssh_cidr: "0.0.0.0/0"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_instance_type:   "t2.micro"
          TF_VAR_desired_capacity: "2"
          TF_VAR_max_size:         "4"
          TF_VAR_min_size:         "1"
          TF_VAR_allowed_ssh_cidr: "0.0.0.0/0"

      - name: Export Terraform Outputs
        # adjust these output names to whatever you defined in outputs.tf
        run: |
          echo "Writing TF outputs to tf-outputs.json"
          terraform output -json > tf-outputs.json

      - name: Upload TF Outputs
        uses: actions/upload-artifact@v3
        with:
          name: tf-outputs
          path: tf-outputs.json

  deploy:
    name: 'Ansible Deploy'
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download TF Outputs
        uses: actions/download-artifact@v3
        with:
          name: tf-outputs
          path: .

      - name: Generate Ansible Inventory
        # Parses tf-outputs.json to a basic inventory file.
        run: |
          jq -r '.instance_ips.value[]' tf-outputs.json > hosts.list
          cat > inventory.ini <<EOF
          [app_servers]
          $(sed 's/^/    /' hosts.list | tr '\n' '\n')
          EOF
          echo "Inventory:"
          cat inventory.ini

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Run Ansible Playbook
        run: |
          ansible-galaxy install -r requirements.yml   # if you have roles
          ansible-playbook -i inventory.ini \
            playbooks/site.yml \
            --user ec2-user \       # or ubuntu, depending on your AMI
            --ssh-common-args='-o StrictHostKeyChecking=no'

